Index: PdfSharp.Drawing.Pdf/PdfGraphicsState.cs
===================================================================
--- PdfSharp.Drawing.Pdf/PdfGraphicsState.cs	(revision 99631)
+++ PdfSharp.Drawing.Pdf/PdfGraphicsState.cs	(working copy)
@@ -248,7 +248,7 @@
 
         if (colorMode != PdfColorMode.Cmyk)
         {
-          if (this.realizedFillColor.Rgb != color.Rgb)
+          if (this.realizedFillColor.Argb != color.Argb)
           {
             this.renderer.Append(PdfEncoders.ToString(color, PdfColorMode.Rgb));
             this.renderer.Append(" rg\n");
Index: PdfSharp.Drawing/XSolidBrush.cs
===================================================================
--- PdfSharp.Drawing/XSolidBrush.cs	(revision 99631)
+++ PdfSharp.Drawing/XSolidBrush.cs	(working copy)
@@ -85,7 +85,6 @@
       {
         if (this.immutable)
           throw new ArgumentException(PSSR.CannotChangeImmutableObject("XSolidBrush"));
-        this.color = value;
 #if GDI
         this.gdiDirty = this.gdiDirty || this.color != value;
 #endif
@@ -95,6 +94,7 @@
 #if GDI && WPF
         this.gdiDirty = this.wpfDirty = true;
 #endif
+        this.color = value;
       }
     }
     internal XColor color;
Index: PdfSharp.Drawing/XStringFormats.cs
===================================================================
--- PdfSharp.Drawing/XStringFormats.cs	(revision 99631)
+++ PdfSharp.Drawing/XStringFormats.cs	(working copy)
@@ -45,73 +45,37 @@
   /// </summary>
   public static class XStringFormats
   {
+      private static XStringFormat CreateFormat(XStringAlignment alignment, XLineAlignment lineAlignment)
+      {
+          XStringFormat format = new XStringFormat();
+          format.LineAlignment = lineAlignment;
+          format.Alignment = alignment;
+          return format;
+      }
+
     /// <summary>
     /// Gets a new XStringFormat object that aligns the text left on the base line.
     /// </summary>
-    public static XStringFormat Default
-    {
-      get
-      {
-        XStringFormat format = new XStringFormat();
-        format.LineAlignment = XLineAlignment.BaseLine;
-        return format;
-      }
-    }
+    public static readonly XStringFormat Default = CreateFormat(XStringAlignment.Near, XLineAlignment.BaseLine);
 
     /// <summary>
     /// Gets a new XStringFormat object that aligns the text top left of the layout rectangle.
     /// </summary>
-    public static XStringFormat TopLeft
-    {
-      get
-      {
-        XStringFormat format = new XStringFormat();
-        format.Alignment = XStringAlignment.Near;
-        format.LineAlignment = XLineAlignment.Near;
-        return format;
-      }
-    }
+    public static readonly XStringFormat TopLeft = CreateFormat(XStringAlignment.Near, XLineAlignment.Near);
 
     /// <summary>
     /// Gets a new XStringFormat object that centers the text in the middle of the layout rectangle.
     /// </summary>
-    public static XStringFormat Center
-    {
-      get
-      {
-        XStringFormat format = new XStringFormat();
-        format.Alignment = XStringAlignment.Center;
-        format.LineAlignment = XLineAlignment.Center;
-        return format;
-      }
-    }
+    public static readonly XStringFormat Center = CreateFormat(XStringAlignment.Center, XLineAlignment.Center);
 
     /// <summary>
     /// Gets a new XStringFormat object that centers the text at the top of the layout rectangle.
     /// </summary>
-    public static XStringFormat TopCenter
-    {
-      get
-      {
-        XStringFormat format = new XStringFormat();
-        format.Alignment = XStringAlignment.Center;
-        format.LineAlignment = XLineAlignment.Near;
-        return format;
-      }
-    }
+    public static readonly XStringFormat TopCenter = CreateFormat(XStringAlignment.Center, XLineAlignment.Near);
 
     /// <summary>
     /// Gets a new XStringFormat object that centers the text at the bottom of the layout rectangle.
     /// </summary>
-    public static XStringFormat BottomCenter
-    {
-      get
-      {
-        XStringFormat format = new XStringFormat();
-        format.Alignment = XStringAlignment.Center;
-        format.LineAlignment = XLineAlignment.Far;
-        return format;
-      }
-    }
+    public static readonly XStringFormat BottomCenter = CreateFormat(XStringAlignment.Center, XLineAlignment.Far);
   }
 }
\ No newline at end of file
